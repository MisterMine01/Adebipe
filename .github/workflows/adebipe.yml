name: PHP Composer

on:
  push:
    branches:
      - "*" # Push to all branches
      - "!gh-pages" # Except gh-pages
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check for sniffs
        run: vendor/bin/phpcs src/Builder services --colors --report=summary

      - name: Check for tests
        run: vendor/bin/phpunit --colors=always --testdox

  buildDoc:
    runs-on: ubuntu-latest
    needs: [test]
    # if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install documentor
        run: wget -O phpDocumentor.phar https://github.com/phpDocumentor/phpDocumentor/releases/download/v3.4.3/phpDocumentor.phar

      - name: Generate documentation
        run: php phpDocumentor.phar run

      - uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: .documentor/

  deployDoc:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    needs: [buildDoc, test]
    # if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Prepare git repository
        env:
          CI_COMMIT_AUTHOR: github-actions[bot]
          CI_COMMIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
        run: |
          git config --local user.email "${{ env.CI_COMMIT_AUTHOR_EMAIL }}"
          git config --local user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git fetch
          git checkout origin/gh-pages
          git pull origin gh-pages --force

      - name: Copy artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Make gh-pages branch
        env:
          CI_COMMIT_MESSAGE: Update github pages
        run: |
          mv ./artifacts/documentation/* .
          rm -rf ./artifacts
          git add .
          [[ -n $(git status -s) ]] && git commit -m "${{ env.CI_COMMIT_MESSAGE }}" || echo "No changes to commit"

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ env.GH_TOKEN }}
          branch: gh-pages
