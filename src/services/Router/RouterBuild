<?php


class RouterBuild
{

    public function __construct(
        private array $routes
    ) {}
    
    public function getBuilderRouter(): string
    {
        $file_code = file_get_contents(__DIR__ . '/ProdRouter');
        $file_code = str_replace("\"ROUTES GO HERE\";", $this->getRoutesCode(), $file_code);
        $file_code = str_replace("// CODE OF ROUTES GOES HERE", $this->getRoutesFuncCode(), $file_code);
        return $file_code;
    }

    private function getRoutesCode(): string
    {
        $routesCode = array();
        foreach ($this->routes as $route => $routeData) {
            $routesCode[$route] = array();
            foreach ($routeData as $method => $function) {
                $routesCode[$route][$method] = $this->getFunctionName($route, $method);
            }
        }
        return var_export($routesCode, true) . ';';
    }

    private function getFunctionName(string $route, string $method): string
    {
        return 'route_' . str_replace('/', '_', $route) . '_' . $method;
    }

    private function getRoutesFuncCode(): string
    {
        $code_routes = '';
        foreach ($this->routes as $route => $routeData) {
            foreach ($routeData as $method => $function) {
                $start = $function->getStartLine() - 1;
                $end = $function->getEndLine();
                $length = $end - $start;
                $code = file($function->getFileName());
                $code = implode("", array_slice($code, $start, $length));
                // Change name of the function
                $code = str_replace('function ' . $function->getName(), 'function ' . $this->getFunctionName($route, $method), $code);
                $code_routes .= $code . PHP_EOL;
            }
        }
        return $code_routes;
    }
}
